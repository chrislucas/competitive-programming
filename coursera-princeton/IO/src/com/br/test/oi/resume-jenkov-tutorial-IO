http://tutorials.jenkov.com/java-io/index.html

Resumo texto Overview
Java IO is an API that comes with Java whose goal is reading and writing data (IO).
The Java IO API is located in the java.io package. There are in the java.io package
a vast amount of choices can be rather confusing. What is the purpose of all these classes ?

The purposse of this tutorial is to try to give you an overview of how all these classes are grouped, and
the purpose behind them.


The java.io package doesn't actually address(resolver, lidar, tratar, abordar, enfrentar) all types of
input and output. For instance, input and output to a GUI or Web pages.


Java NIO - The Alternative IO API

Java also contains another IO API, Java NIO. It contains classs that does much of the same as the Java
IO and Networking API, but can work in non-blocking mode, which can in some situations give a big
performance boost over Blocking IO

In this text I will try to group the classes after their purpose. This grouping should make it easier to
understand the purpose of class in the future, or find the class you need for a specific purpose.

Input and Output - Source and Destination
Java's IO package mostly concerns itself (concerns itself = preocupa-se) with the reading of raw data
from a source and writing of raw data to a destination {Files. Pipes, NetWork, memory buffer.
sysin sysout syserr}.

Streams

A stream is aa conceptually endless flow of data, you can either(either={ou.tambem,tampouco}) read from a stream
or write to it. Streams is connected to a data source or data destination. Stream in Java IO can be either byte based
or character based.

A program that needs to read data from some source needs an   or a Reader, a program
that needs to write data to some destination needs an OutputStream or a Writer

Java IO pourpose:
Java IO container many subclasses of the InputStream, OutputStream, Reader and Writer clasess.

The purpose addressed are summarized below:
{File access, Network access, interna memory buffer access, inter Thread comunication(Pipes), Buffering
Filtering, Parsing, Readin and Write Text, primitive and Objects}

These purpose are nice to knoe(é bom saber esses propositos). They make it somewhat(um pouco, tanto, um tanto)
easier to understand what
the classes are targeting
























